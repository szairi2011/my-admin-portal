# **** Backend reverse proxying ****
# 1. Define an nginx load balancer to efficiently distribute
# the network traffic in case we wish to proxy backend requests to multiples backend instances
upstream backend {
    server backend-service;
    # server localhost;
}

server {
    listen 0.0.0.0:80;
    listen [::]:80;
    default_type application/octet-stream;

    gzip on;
    gzip_comp_level 6;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_buffers 16 8k;
    client_max_body_size 256M;

    root /usr/share/nginx/html/my-admin-portal;

    # 2. Leverage nginx load balancing capability (i.e. Defined above) instead of reverse proxying
    # to a single server like so: proxy_pass http://backend-service
    location /api/ {
        # proxy_set_header Connection "";
        proxy_pass http://backend/;
    }

    location / {
        try_files $uri $uri/ /index.html =404;
    }
}
